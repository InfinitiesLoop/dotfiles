#!/bin/bash

# Allow user to override destination dir (useful for testing),
# but default to $HOME
dest_dir=${DEST_DIR-$HOME}
dotfiles_dir=$( cd -P "$(dirname "$0" )" && pwd )

# Find linkables in this script's directory tree
linkables=`find "$dotfiles_dir" -name \*.symlink`
skip_all=false
overwrite_all=false
backup_all=false

for link in $linkables; do
  # Strip the .symlink part of the name
  noext=${link%.*}

  # Throw away everything before the last '/', and prefix with a '.'
  targetname=.$(basename "$noext")

  # Build the target path
  dest=$dest_dir/$targetname

  overwrite=false
  backup=false

  # If a file or symlink already exists at the destination,
  if [ -e "$dest" ]
  then
    # unless we've already be told to skip all duplicates,
    $skip_all && continue

    # Prompt for an action: overwrite (all), backup (all), skip (all)
    if ! $overwrite_all && ! $backup_all;
    then
      echo "File already exists: $dest, what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all"
      read

      case "$REPLY" in
        "o" )
          overwrite=true
          ;;
        "O" )
          overwrite_all=true
          ;;
        "b" )
          backup=true
          ;;
        "B" )
          backup_all=true
          ;;
        "s" )
          continue
          ;;
        "S" )
          skip_all=true
          continue
          ;;
      esac
    fi

    # If overwrite, remove the existing file/symlink
    ($overwrite || $overwrite_all) && rm -f $dest

    # If backup, rename the existing file/symlink with a .backup suffix
    ($backup || $backup_all) && mv "$dest" "${dest}.backup"
  fi
  
  # Link the file to the destination
  ln -s "$link" "$dest"
done
